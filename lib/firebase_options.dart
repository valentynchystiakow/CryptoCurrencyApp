// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
// import libraries
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/**
 * Default [FirebaseOptions] for use with your Firebase apps.
 *
 * Example:
 * ```dart
 * import 'firebase_options.dart';
 * // ...
 * await Firebase.initializeApp(
 *   options: DefaultFirebaseOptions.currentPlatform,
 * );
 * ```
 */
// creates class with DefaultFirebase Options
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    // switches between different platforms
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      // in Linux case throws unsupported error
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // creates instance of FirebaseOptions with web settings
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBipgYUtXRYMT0nNJEiRdxTrnVPO1K65b8',
    appId: '1:871863458117:web:ed83ac5d113afca76f862c',
    messagingSenderId: '871863458117',
    projectId: 'crypto-list-app-7a2e4',
    authDomain: 'crypto-list-app-7a2e4.firebaseapp.com',
    storageBucket: 'crypto-list-app-7a2e4.firebasestorage.app',
    measurementId: 'G-ZXFWH3SD3H',
  );
  // creates instance of FirebaseOptions with android settings
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDMvKXjpAx_rMb17tc1E_IBwM9h237W1jw',
    appId: '1:871863458117:android:212258b966a05e346f862c',
    messagingSenderId: '871863458117',
    projectId: 'crypto-list-app-7a2e4',
    storageBucket: 'crypto-list-app-7a2e4.firebasestorage.app',
  );
  // creates instance of FirebaseOptions with ios settings
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyD34-utp05nGlQ6M7pDa9vwv5rAZxaq-JI',
    appId: '1:871863458117:ios:0eabe02d9aea1d046f862c',
    messagingSenderId: '871863458117',
    projectId: 'crypto-list-app-7a2e4',
    storageBucket: 'crypto-list-app-7a2e4.firebasestorage.app',
    iosBundleId: 'com.example.cryptoCoinsList',
  );
  // creates instance of FirebaseOptions with macos settings
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyD34-utp05nGlQ6M7pDa9vwv5rAZxaq-JI',
    appId: '1:871863458117:ios:0eabe02d9aea1d046f862c',
    messagingSenderId: '871863458117',
    projectId: 'crypto-list-app-7a2e4',
    storageBucket: 'crypto-list-app-7a2e4.firebasestorage.app',
    iosBundleId: 'com.example.cryptoCoinsList',
  );
  // creates instance of FirebaseOptions with windows settings
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBipgYUtXRYMT0nNJEiRdxTrnVPO1K65b8',
    appId: '1:871863458117:web:c28af530970a6d8c6f862c',
    messagingSenderId: '871863458117',
    projectId: 'crypto-list-app-7a2e4',
    authDomain: 'crypto-list-app-7a2e4.firebaseapp.com',
    storageBucket: 'crypto-list-app-7a2e4.firebasestorage.app',
    measurementId: 'G-GKD44D9HBZ',
  );
}
